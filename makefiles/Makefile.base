###############################################################################
# @file Makefile.base
#
# @brief Generic rules used to compile driver-gen driver framework
#
# Automatically generated for driver-gen Cvorb driver
#
# @author Copyright (C) 2003-2010 CERN. Yury GEORGIEVSKIY <ygeorgie@cern.ch>
#
# @date Created on 22/01/2010
#
# @section license_sec License
#          Released under the GPL
###############################################################################

# Do not print "Entering directory ..."
MAKEFLAGS += --no-print-directory

# Standard CERN Make rules
include /acc/src/dsc/co/Make.auto

# Extremely simplified Quiet/Verbose
ifdef V
  ifeq ("$(origin V)", "command line")
    VERBOSE = $(V)
  endif
endif
ifndef VERBOSE
  VERBOSE = 0
endif

ifeq ($(VERBOSE),1)
  Q   =
  LD  = $(LINK.o)
  QLD =
  QNM =
  CCL = $(CC)
else
   Q   = @

  _LD := $(LINK.o)
   LD  = @echo 'LD   $@'; $(_LD)

  _CC := $(CC)
   CC  = @echo 'CC   $@'; $(_CC)

   CCL = @echo 'CC   $%'; $(_CC)

  QNM  = @echo 'KSYM $@'

  _AR := $(AR)
   AR  = @echo 'AR   $@'; $(_AR) 2>&1>&/dev/null
endif

# General settings
# Ensure lowercase driver name
DRIVER_NAME := $(shell echo $(DRIVER_NAME) | tr "[:upper:]" "[:lower:]")

PHONY := _all
_all:

# Compiled executables, libraries && drivers goes in this directory.
# This name will be defined *only* if it is not yet defined by the user.
# User can do it in driver-specific makefile (Makefile.specific)
FINAL_DEST ?= object_$(DRIVER_NAME)
$(FINAL_DEST):
	$(Q)mkdir -p ../$@

# Compiled files goes here
OBJDIR = $(CPU)_$(BLDTYPE)
$(CPU)_%:
	$(Q)mkdir -p $@

# Redefine implicit rule
%.$(CPU).o: %.c
	$(Q)$(COMPILE.c) $< $(OUTPUT_OPTION)

unexport BLDTYPE PASSTARG

# generic definitions
EXTDLL  = .dll
EXTSO   = .so
EXTLIB  = .a
EXTOBJ  = .$(CPU).o
EXTEXE  =

comma = ,
SRCCSFXS := .c
SRCCXXSFXS := .cpp .cxx .C .cc .CC
SRCSFXS := $(SRCCSFXS) $(SRCCXXSFXS)
FLTSRCFILES = $(filter-out $(comma)%, $(filter $(addprefix %,$(SRCSFXS)),$(SRCFILES)))
OBJFILES = $(addsuffix $(EXTOBJ),$(notdir $(basename $(FLTSRCFILES)))) $(ADDOBJFILES)
OBJS = $(addprefix $(OBJDIR)/,$(OBJFILES)) $(ADDOBJS)
LIBS = $(join $(addsuffix $(OBJDIR)/,$(dir $(LIBFILES))),$(notdir $(LIBFILES)))

# Buildup all include pathes
INCFLAGS = $(addprefix -I,$(INCDIRS)) $(addprefix -I,$($(BLDTYPE).INCDIRS)) $(ADDINCLUDES)

BASECFLAGS   = -Wall -DCOMPILE_TIME=$(shell date --utc +%s)
BASECXXFLAGS = -Wall -Wno-reorder

# debug/optimization flags
dbg.BLDTFLAGS = -g -DDEBUG -D_DEBUG
rls.BLDTFLAGS = -O2
drv.BLDTFLAGS =  # Drivers are build without debug and optimization
BLDTFLAGS = $($(BLDTYPE).BLDTFLAGS)

# next 3 are not used for now, but are kept for 'just-in-case-if...'
BASELDSHFLAGS = $(LDSHFLAGS) $(HOSTLDSHFLAGS) $(BLDTFLAGS) $(ADDLDSHFLAGS)
BASELDFLAGS   = $(LDFLAGS) $(HOSTLDFLAGS) $(BLDTFLAGS) $(ADDLDFLAGS)
BASEARFLAGS   = $(ARFLAGS) $(HOSTARFLAGS) $(ADDARFLAGS)

# for C++
CXXFLAGS = $(BASECXXFLAGS) $(HOSTCXXFLAGS) $(DEFFLAGS) $(INCFLAGS) $(BLDTFLAGS) $(ADDCXXFLAGS)

# for C
CFLAGS = $(BASECFLAGS) $(HOSTCFLAGS) $(DEFFLAGS) $(INCFLAGS) $(BLDTFLAGS) $(ADDCFLAGS)

vpath %$(EXTOBJ) $(OBJDIR)

# Our Primary target
ifeq (,$(findstring $(notdir $(shell pwd)), $(SUBDIRS)))

_all $(MAKECMDGOALS): build-subdirs

FTARGETS = $(filter-out all linux lynx deliver, $(MAKECMDGOALS))
COMPILE  = $(MAKE) -C $$dir $(MAKECMDGOALS)

endif # ifeq ($(SUBDIRS),)

# Descend into subdirectories
%-subdirs:
	$(if $(FTARGETS), $(error wrong/unsupported target(s) "$(FTARGETS)"))
	@for dir in $(SUBDIRS) _dummy_dir_ ; \
	do \
	  if [ $$dir != _dummy_dir_ -a -d $$dir ]; then \
		echo -e "\n---------[ Processing '$$dir' directory ]--------------"; \
		$(COMPILE); \
		if [ $$? -eq 2 ]; then exit 1; fi; \
	  fi; \
	done

# Cleaning up
clean clear:

# doxygen docs generation
DOXY_DIR ?= doxygen_output
DOXY_FILES ?= .
DOXY_TARGET ?= ../../doxy/doxy.sh -n"$(DRIVER_NAME)" -o"$(DOXY_DIR)" $(DOXY_FILES)

doxy: doxy_clean
	$(DOXY_TARGET)

doxy_clean:
	rm -rf $(DOXY_DIR)

PHONY += doxy doxy_clean

# For producing object files. Just an example of possible redefinition.
#OUTPUT_OPTION +=; mv $*.$(CPU).o $(OBJDIR)/$@

ifndef BLDTYPE
BLDTYPE = dbg
endif

PHONY += all
_all: all

PHONY += FORCE
FORCE:

# Declare the contents of the .PHONY variable as phony.  We keep that
# information in a variable so we can use it in if_changed and friends.
.PHONY: $(PHONY)
