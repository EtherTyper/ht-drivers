###############################################################################
# @file Makeflie.lib
#
# @brief Library compilation.
#
# @author Yury GEORGIEVSKIY, CERN.
#
# @date Created on 13/01/2009
###############################################################################

# Makefile from current directory supress one from upper level
include $(shell if [ -e ./Makefile.specific ]; then \
		echo ./Makefile.specific; \
	else \
		echo ../Makefile.specific; \
	fi)

include ../Makefile

ADDCFLAGS += $(STDFLAGS) -DDRIVER_NAME=\"$(DRIVER_NAME)\"

INCDIRS = \
	../include \
	../../include

SRCFILES = \
	$(wildcard *.c)

############################################################################
#      Rules to build .a library.                                          #
############################################################################
lib$(DRIVER_NAME).$(CPU).a: lib$(DRIVER_NAME).$(CPU).a($(OBJFILES))
	$(Q)$(AR) -rv  $@ $(XTRA_USR_LIBS) $^
	$(Q)$(RANLIB) $@

LIBRARIES += lib$(DRIVER_NAME).$(CPU).a
############################################################################

############################################################################
#      If we need to build a .so libraries.                                #
############################################################################
ifeq ($(COMPILE_LIB_SHARED),y)
# redefine implicit rule
(%.$(CPU).o): %.c
	$(Q)$(CCL) $(CFLAGS) $(CPPFLAGS) -fPIC -c $< -o $*.$(CPU).o

# Create .so object
lib$(DRIVER_NAME).$(CPU).so: lib$(DRIVER_NAME).$(CPU).so($(OBJFILES))
	$(Q)$(CC) -shared -Wl,-export-dynamic -Wl,-soname,$@ -o $@ $(OBJFILES)

LIBRARIES += lib$(DRIVER_NAME).$(CPU).so
endif
############################################################################

_build: $(LIBRARIES) $(FINAL_DEST)
	$(Q)mv $(LIBRARIES) ../$(FINAL_DEST)
	$(Q)$(RM) $(OBJFILES)

all:
	$(Q)$(MAKE) _build CPU=$(CPU)

# CERN delivery
include ../$(ROOTDIR)/makefiles/deliver.mk
