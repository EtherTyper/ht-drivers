###############################################################################
# @file Makefile.inst
#
# @brief Build up driver installation program.
#
# @author Yury GEORGIEVSKIY. CERN BE/CO
#
# @date Created on 13/02/2009
###############################################################################

include ../Makefile.specific
include ../../makefiles/Makefile.base

INSTDIR    = $(addsuffix /$(DLVRYPLS)/$(CPU), $(EXECINSTDIR))
ADDCFLAGS  = $(STDFLAGS) -DCPU=\"$(CPU)\" -DKVER=\"$(KVER)\"

# libraries (and their pathes) to link executable file with
XTRALIBDIRS = ../../utils/user
LOADLIBES  := $(addprefix -L,$(XTRALIBDIRS)) $(LOADLIBES) -lutils.$(CPU)
XTRALIBS    = -lxml2 -lz

vpath %.c ./  ../../utils/user ../../utils/install

SRCFILES = $(wildcard *.c) inst_utils.c

ifeq ($(CPU), ppc4)
# something to include? As for now - nothing.
else
SRCFILES    += inst_linux.c
endif

LDLIBS      = \
	$(XTRALIBS)

INCDIRS = \
	./ \
	../include \
	../.. \
	../../include \
	../../utils

ADDINCLUDES = $(KERN_INCLUDES)

EXEC_OBJS = $(DRIVER_NAME)inst

$(EXEC_OBJS): $(OBJFILES)

build:: abort $(FINAL_DEST) $(OBJDIR) $(EXEC_OBJS) ../$(FINAL_DEST)/instprog.$(CPU)

# redefine Make.auto rule to get rid of name dependencies
$(EXEC_OBJS): $(OBJFILES)
	$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@
	mv $(OBJFILES) $(EXEC_OBJS) $(OBJDIR)
	ln -sf $(OBJDIR)$@ $@.$(CPU)

../$(FINAL_DEST)/instprog.$(CPU):
	@if [ -e "$$@" ]; then \
		rm -f $@ ; \
	echo "ln -s ../install/$(DRIVER_NAME)inst.$(CPU) $@"; \
	ln -s  ../install/$(DRIVER_NAME)inst.$(CPU) $@; \
	fi

install:: abort
	$(CP) -p $(EXEC_OBJS) $(INSTDIR)/$(BSP)/$(FINAL_DEST)
	ln -fs ../$(BSP)/$(FINAL_DEST)/$(DRIVER_NAME)Inst $(INSTDIR)/drvrutil/$(DRIVER_NAME)Inst
	ln -fs ../drvrutil/$(DRIVER_NAME)Inst $(INSTDIR)/bin/$(DRIVER_NAME)Inst

cleanloc clearloc:: abort
	@ if [ -n "$(OBJDIR)" ]; then \
		rm -rf $(OBJDIR)* ; \
	fi
	-rm -f ../$(FINAL_DEST)/instprog $(DRIVER_NAME)Inst
	-find ./ -name '*~' -o -name '*.$(CPU).o' | xargs rm -f
